version: "3"

services:
  postgres:
    image: postgres
    container_name: pg
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=go-admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - go-admin-network
  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=password
      - REDIS_REPLICATION_mode=master
    ports:
      - 6379:6379
    networks:
      - go-admin-network
  redisinsight:
    image: redislabs/redisinsight
    container_name: go-admin-redisinsight
    restart: unless-stopped
    volumes:
      - redis_data:/var/lib/redis
    ports:
      - 8001:8001
    networks:
      - go-admin-network
  # go-admin:
  #   build: .
  #   image: go-admin
  #   container_name: go-admin
  #   restart: unless-stopped
  #   ports:
  #     - 5001:5001
  #   networks:
  #     - go-admin-network
  go-admin:
    image: dinhcanh/go-admin:latest
    container_name: go-admin
    restart: unless-stopped
    ports:
      - 5001:5001
    networks:
      - go-admin-network
  prometheus:
    image: prom/prometheus
    container_name: prom
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
    networks:
      - go-admin-network
    ports:
      - "9090:9090"
volumes:
  pg-data: {}
  redis_data: {}
  prometheus_data: {}

networks:
    go-admin-network:
      driver: bridge
      name: go-admin-network